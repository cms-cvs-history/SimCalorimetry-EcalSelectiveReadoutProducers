process PROD  = {

  untracked PSet maxEvents = {untracked int32 input = 10}

  module o1 = PoolOutputModule { 
    untracked string fileName = "srp_validation_in.root" 

    untracked vstring outputCommands = 
    {
     "drop *",
     "keep EBDataFramesSorted_ecalUnsuppressedDigis_*_*",
     "keep EEDataFramesSorted_ecalUnsuppressedDigis_*_*",
     "keep EcalTriggerPrimitiveDigisSorted_ecalTriggerPrimitiveDigis_*_*"
    }

    untracked int32 compressionLevel = 9
  }
 

  service = MessageLogger {
    untracked vstring destinations = {"cout"}
  }


  service = RandomNumberGeneratorService
  {
     untracked uint32 sourceSeed = 135799753
     PSet moduleSeeds =
     {
        untracked uint32 VtxSmeared = 123456789
        untracked uint32 g4SimHits = 123456789
        untracked uint32 ecalUnsuppressedDigis = 123456789
     }
  }

include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
       
   # NOTE : if one wants to run with the SiStripDigitizer,
   #        then mag.field in the OscarProducer should be
   #        turned ON; otherwise it gets (re)created by the
   #        SiStripDigitizer, which seems to corrupt at all 
   #        the edm::Event record
    

   # Step 1 : Event Generation

   # flat random E-gun, single muon
   # 
   # if you want another particle type, replace the PartID
   # (standard STDHEP numbering scheme)
   #
   # to run it along with CMS detector simulation
   # (OscarProducer) make sure to select QGSP physics
   # list, instead DummyPhysics ("Dummy" has only EM 
   # process and wont know to model interactions of
   # hadrons with matter)
   #
  source = FlatRandomEGunSource
  {
     untracked PSet PGunParameters =
     {
        # you can request more than 1 particle
        #vint32  PartID = {211,11}
        #vint32 PartID = { 13 } 
        untracked vint32 PartID = { 11 } #11->e-
        untracked double MinEta = -3.0
        untracked double MaxEta = 3.0
        untracked double MinPhi = -3.14159265358979323846 # must be in radians
        untracked double MaxPhi = 3.14159265358979323846
        untracked double MinE  = 99.99
        untracked double MaxE  = 100.01
     }
     untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
  }
 
  # event vertex smearing - applies only once (internal check)
  # Note : all internal generators will always do (0,0,0) vertex
  #
  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

  #Geometry
  #
  #include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
  include "Geometry/EcalCommonData/data/EcalOnly.cfi"

 # Calo geometry service model
  include "Geometry/CaloEventSetup/data/CaloGeometry.cff"
  include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"
  include "Geometry/EcalMapping/data/EcalMapping.cfi"

  #es_module = TrackerGeometricDetESModule {}
  #Magnetic Field
  #
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
		
  # Step 2 : CMS Detector Simulation
  include "SimG4Core/Application/data/SimG4Object.cfi"

  # Pile-up processing:
  include "SimGeneral/MixingModule/data/mixNoPU.cfi"
  
  ###################################################################
  # Ecal digi production:
  include "SimCalorimetry/EcalSimProducers/data/ecaldigi.cfi"
  ###################################################################

  ###################################################################
  # Get hardcoded conditions the same used for standard digitization
  include "CalibCalorimetry/Configuration/data/Ecal_FakeConditions.cff"
  #es_source = EcalTrivialConditionRetriever {
  #}
  ###################################################################

  # Selective Readout Processor producer
  #include "SimCalorimetry/EcalSelectiveReadoutProducers/data/ecalDigis.cfi"

  # TPG: defines the ecalTriggerPrimitiveDigis module
  include  "SimCalorimetry/EcalTrigPrimProducers/data/ecalTriggerPrimitiveDigis.cff"

  replace ecalTriggerPrimitiveDigis.InstanceEB = ""
  replace ecalTriggerPrimitiveDigis.InstanceEE = ""
  replace ecalTriggerPrimitiveDigis.Label = "ecalUnsuppressedDigis"

  sequence detSim = { VtxSmeared, g4SimHits }

  path p = { detSim, mix, ecalUnsuppressedDigis, ecalTriggerPrimitiveDigis }

  endpath outpath = { o1 }
}
