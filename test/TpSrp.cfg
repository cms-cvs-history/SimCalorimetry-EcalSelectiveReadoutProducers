process TpSrp  = {

   # input
   source = PoolSource {
#     untracked vstring fileNames = {'file:photon100GeV_srphi0_digi.root'}
#      untracked vstring fileNames = {'file:electron10GeV_digi.root'}
      untracked vstring fileNames = {'file:photon100GeV_digi.root'}
#      untracked vstring fileNames = {'file:photon10GeV_srphi0_digi.root'}
#      untracked vstring fileNames = {'file:photon100GeV_eta148_digi.root'}
      untracked int32 maxEvents = -1
      untracked uint32 debugVebosity = 1
      untracked bool   debugFlag     = true
   }



  module o1 = PoolOutputModule { 
#    untracked string fileName = "photon100GeV_srphi0.root" 
    untracked string fileName = "tpSrp.root"

    untracked vstring outputCommands = 
    {
     "keep *"
    }
  }
 

  service = MessageLogger {
    untracked vstring destinations = {"cout"}
    #untracked vstring categories = { "DccFir" }
    #untracked PSet cout = { untracked PSet DccFir =  
    #     { untracked string threshold = "DEBUG" }
    #}
    untracked vstring debugModules = {"ecalDigis"}
  }


  service = RandomNumberGeneratorService
  {
     untracked uint32 sourceSeed = 135799753
     PSet moduleSeeds =
     {
        untracked uint32 VtxSmeared = 123456789
     }
  }
    

  es_module = EcalPreshowerGeometryEP {}
  es_module = EcalBarrelGeometryEP {}
  es_module = EcalEndcapGeometryEP {}
  es_module = HcalHardcodeGeometryEP {}
  es_module = CaloTowerHardcodeGeometryEP {}
  es_module = CaloGeometryBuilder {}
   

  #Geometry
  #
  #include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
  include "Geometry/EcalCommonData/data/EcalOnly.cfi"

 # Calo geometry service model
#  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"


  #es_module = TrackerGeometricDetESModule {}
  #Magnetic Field
  #
  #include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
		

  include "SimCalorimetry/EcalSelectiveReadoutProducers/data/ecalDigis.cfi"

#  replace ecalDigis.trigPrimBypass = true
  replace ecalDigis.dumpFlags = 10
#  replace ecalDigis.deltaEta = 1
#  replace ecalDigis.deltaPhi = 1

  module  ecalTriggerPrimitiveDigis = EcalTrigPrimProducer {
    untracked bool Validation = false
    string Label = "ecalUnsuppressedDigis"
    int32 FgvbMinEnergy = 0
  }

  sequence detSim = { VtxSmeared, g4SimHits }

  #path p1 = { ecalTriggerPrimitiveDigis, ecalDigis}
  path p1 = { ecalDigis }
  

  endpath outpath = { o1 }
}
